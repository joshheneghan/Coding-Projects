import numpy as np
from PIL import Image, ImageDraw, ImageFilter
import random
import collections

def get_neighbors(a,y, x):
    if x == 0 or y == 0 or x == (len(a[0])-1) or y == (len(a)-1):
        if x != 0:
            left = a[y][x-1]
        else:
            left = 0
        if y != 0:
            top = a[y-1][x]
        else:
            top = 0
        if x != (len(a[0])-1):
            right = a[y][x+1]
        else:
            right = 0
        if y != (len(a)-1):
            bottom = a[y+1][x]
        else:
            bottom = 0
    else:
        left = a[y][x-1]
        top = a[y-1][x]
        right = a[y][x+1]
        bottom= a[y+1][x]
    return top, right, bottom, left

im1 = Image.open("1.jpg")
im2 = Image.open("2.jpg")
im3 = Image.open("3.jpg")
im4 = Image.open("4.jpg")
im5 = Image.open("5.jpg")
dim = 10
width = 9000
height = 9000
A = np.zeros((dim,dim))
B = np.zeros((dim,dim))
#images = []
tiles = [im5.resize((int(width/dim),int(height/dim))),im1.resize((int(width/dim),int(height/dim))),im2.resize((int(width/dim),int(height/dim))),im3.resize((int(width/dim),int(height/dim))),im4.resize((int(width/dim),int(height/dim)))]
options = {0: [[4,0],
               [3,0],
               [2,0],
               [1,0]],
           1 : [[1,2,3],
                [3,0],
                [1,3,4],
                [2,3,4]],
           2 : [[4,0],
                [1,2,4],
                [1,3,4],
                [2,3,4]],
           3 : [[1,2],
                [1,2,4],
                [1,3,4],
                [1,0]],
           4: [[1,2,3],
               [1,2,4],
               [2,0],
               [2,3,4]],
}

im = Image.new('RGB', (width, height), (0, 0, 0))
back_im=im.copy()



for y in range(len(A)):
    for x in range(len(A[0])):
        r1 = []
        if x == 0 and y == 0:
            result = (1,2,3,4)[random.randint(0,3)]
            back_im.paste(tiles[int(result)], (int(x*width/dim),int(y*height/dim)))
            A[y][x]=result
            B[y][x]=1
            #images.append(back_im.copy())
        else:
            T1,R1,B1,L1 = get_neighbors(A,y,x)
            T2,R2,B2,L2 = get_neighbors(B,y,x)
            if T2 == 1:
                r1.append(options[T1][2])
            else:
                pass
            if R2 == 1:
                r1.append(options[R1][3])
            else:
                pass
            if B2 == 1:
                r1.append(options[B1][0])
            else:
                pass
            if L2 == 1:
                r1.append(options[L1][1])
            else:
                pass
            if len(r1) > 1:
                t = len(r1)
                a1 = [item for sublist in r1 for item in sublist]
                if len(a1) > 1:
                    r2 = [item for item, count in collections.Counter(a1).items() if count == t]
                    result = r2[random.randint(0,len(r2)-1)]
            else:
                a1 = [item for sublist in r1 for item in sublist]
                result = a1[random.randint(0,len(a1)-1)]
            A[y][x]=result
            B[y][x]=1
            back_im.paste(tiles[int(result)], (int(x*width/dim),int(y*height/dim)))
            #images.append(back_im.copy())
           
back_im.show()
#images[0].save('pillow_imagedraw.gif',save_all=True, append_images=images[1:], optimize=False, duration=500, loop=0)


